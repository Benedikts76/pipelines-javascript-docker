# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '7adb269a-a2c7-4b3e-b798-d23fdce7273f'
  imageRepository: 'udhanmtipipelinesjavascriptdocker'
  containerRegistry: 'testpipelines.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: 'latest'
  imagePullSecret: 'testpipelines1f4c-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Name of the new namespace being created to deploy the PR changes.
  k8sNamespaceForPR: 'review-app-$(System.PullRequest.PullRequestId)'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')))
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'udhanMtipipelinesjavascriptdocker.default'
    strategy:
      runOnce:
        deploy:
          steps:
          #- task: KubernetesManifest@0
          #  displayName: Create imagePullSecret
          #  inputs:
          #    action: createSecret
          #    secretName: $(imagePullSecret)
          #    dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
          
          - task: Kubernetes@1
            displayName: kubectl apply using arguments
            inputs:
              connectionType: Azure Resource Manager
              azureSubscriptionEndpoint: k8-udhan
              azureResourceGroup: udhan-rnd
              kubernetesCluster: test-pipelines-2
              command: apply
              arguments: -f $(Pipeline.Workspace)/manifest/deployment.yaml


          #- task: KubernetesManifest@0
          #  displayName: Deploy to Kubernetes cluster
          #  inputs:
          #    action: deploy
          #    manifests: |
          #      $(Pipeline.Workspace)/manifests/deployment.yml
          #      $(Pipeline.Workspace)/manifests/service.yml
          #    imagePullSecrets: |
          #      $(imagePullSecret)
          #    containers: |
          #      $(containerRegistry)/$(imageRepository):$(tag)
