# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '33fcd560-0639-437a-bbf7-258a59a00acd'
  imageRepository: 'udhanmtipipelinesjavascriptdocker'
  containerRegistry: 'testpipelines.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'testpipelines97949710-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'udhanMtipipelinesjavascriptdocker-7572.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          #- task: KubernetesManifest@0
          #  displayName: Deploy to Kubernetes cluster
          #  inputs:
          #    action: deploy
          #    manifests: |
          #      $(Pipeline.Workspace)/manifests/deployment.yml
          #      $(Pipeline.Workspace)/manifests/service.yml
          #    imagePullSecrets: |
          #      $(imagePullSecret)
          #    containers: |
          #      $(containerRegistry)/$(imageRepository):$(tag)
          - task: Kubernetes@1
            inputs:
              connectionType: 'Azure Resource Manager'
              azureResourceGroup: 'udhan-rnd'
              azureSubscriptionEndpoint: 'k8-udhan'
              kubernetesCluster: 'test-pipeline-3'
              command: 'apply'
              arguments: '-f $(Pipeline.Workspace)/manifests/deployment.yml'
              secretType: 'dockerRegistry'
              containerRegistryType: 'Azure Container Registry'
              azureSubscriptionEndpointForSecrets: 'k8-udhan'
              azureContainerRegistry: 'testpipelines.azurecr.io'
              secretName: $(imagePullSecret)
              outputFormat: 'yaml'

